apply plugin: "com.android.library"

def tools = rootProject.ext.tools
def libs = rootProject.ext.libs

def versionMajor = 0
def versionMinor = 0
def versionPatch = 0
def versionBuild = 1

android {
    compileSdkVersion tools.sdk
    buildToolsVersion tools.tools

    defaultConfig {
        minSdkVersion tools.minsdk
        targetSdkVersion tools.sdk

        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation "com.android.support:support-annotations:${libs.support}"
    implementation "com.google.code.gson:gson:${libs.gson}"

    compileOnly "com.jakewharton.auto.value:auto-value-annotations:${libs.autovalueann}"
    annotationProcessor "com.google.auto.value:auto-value:${libs.autovalue}"

    compileOnly "com.ryanharter.auto.value:auto-value-gson-annotations:${libs.autovaluegson}"
    annotationProcessor "com.ryanharter.auto.value:auto-value-gson:${libs.autovaluegson}"
    annotationProcessor "com.ryanharter.auto.value:auto-value-parcel:${libs.autovalueparcel}"

    testImplementation "junit:junit:${libs.junit}"

    androidTestImplementation "com.android.support.test:runner:${libs.supporttest}"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${libs.espresso}"
}
